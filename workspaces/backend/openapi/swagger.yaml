basePath: /api/v1
definitions:
  api.ErrorCause:
    properties:
      validation_errors:
        items:
          $ref: '#/definitions/api.ValidationError'
        type: array
    type: object
  api.ErrorEnvelope:
    properties:
      error:
        $ref: '#/definitions/api.HTTPError'
    type: object
  api.HTTPError:
    properties:
      cause:
        $ref: '#/definitions/api.ErrorCause'
      code:
        type: string
      message:
        type: string
    type: object
  api.NamespaceListEnvelope:
    properties:
      data:
        items:
          $ref: '#/definitions/namespaces.Namespace'
        type: array
    type: object
  api.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
      type:
        $ref: '#/definitions/field.ErrorType'
    type: object
  api.WorkspaceCreateEnvelope:
    properties:
      data:
        $ref: '#/definitions/workspaces.WorkspaceCreate'
    type: object
  api.WorkspaceEnvelope:
    properties:
      data:
        $ref: '#/definitions/workspaces.Workspace'
    type: object
  api.WorkspaceKindEnvelope:
    properties:
      data:
        $ref: '#/definitions/workspacekinds.WorkspaceKind'
    type: object
  api.WorkspaceKindListEnvelope:
    properties:
      data:
        items:
          $ref: '#/definitions/workspacekinds.WorkspaceKind'
        type: array
    type: object
  api.WorkspaceListEnvelope:
    properties:
      data:
        items:
          $ref: '#/definitions/workspaces.Workspace'
        type: array
    type: object
  field.ErrorType:
    enum:
    - FieldValueNotFound
    - FieldValueRequired
    - FieldValueDuplicate
    - FieldValueInvalid
    - FieldValueNotSupported
    - FieldValueForbidden
    - FieldValueTooLong
    - FieldValueTooMany
    - InternalError
    - FieldValueTypeInvalid
    type: string
    x-enum-varnames:
    - ErrorTypeNotFound
    - ErrorTypeRequired
    - ErrorTypeDuplicate
    - ErrorTypeInvalid
    - ErrorTypeNotSupported
    - ErrorTypeForbidden
    - ErrorTypeTooLong
    - ErrorTypeTooMany
    - ErrorTypeInternal
    - ErrorTypeTypeInvalid
  health_check.HealthCheck:
    properties:
      status:
        $ref: '#/definitions/health_check.ServiceStatus'
      systemInfo:
        $ref: '#/definitions/health_check.SystemInfo'
    type: object
  health_check.ServiceStatus:
    enum:
    - Healthy
    - Unhealthy
    type: string
    x-enum-varnames:
    - ServiceStatusHealthy
    - ServiceStatusUnhealthy
  health_check.SystemInfo:
    properties:
      version:
        type: string
    type: object
  namespaces.Namespace:
    properties:
      name:
        type: string
    type: object
  workspacekinds.ImageConfig:
    properties:
      default:
        type: string
      values:
        items:
          $ref: '#/definitions/workspacekinds.ImageConfigValue'
        type: array
    type: object
  workspacekinds.ImageConfigValue:
    properties:
      description:
        type: string
      displayName:
        type: string
      hidden:
        type: boolean
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/workspacekinds.OptionLabel'
        type: array
      redirect:
        $ref: '#/definitions/workspacekinds.OptionRedirect'
    type: object
  workspacekinds.ImageRef:
    properties:
      url:
        type: string
    type: object
  workspacekinds.OptionLabel:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  workspacekinds.OptionRedirect:
    properties:
      message:
        $ref: '#/definitions/workspacekinds.RedirectMessage'
      to:
        type: string
    type: object
  workspacekinds.PodConfig:
    properties:
      default:
        type: string
      values:
        items:
          $ref: '#/definitions/workspacekinds.PodConfigValue'
        type: array
    type: object
  workspacekinds.PodConfigValue:
    properties:
      description:
        type: string
      displayName:
        type: string
      hidden:
        type: boolean
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/workspacekinds.OptionLabel'
        type: array
      redirect:
        $ref: '#/definitions/workspacekinds.OptionRedirect'
    type: object
  workspacekinds.PodMetadata:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
    type: object
  workspacekinds.PodTemplate:
    properties:
      options:
        $ref: '#/definitions/workspacekinds.PodTemplateOptions'
      podMetadata:
        $ref: '#/definitions/workspacekinds.PodMetadata'
      volumeMounts:
        $ref: '#/definitions/workspacekinds.PodVolumeMounts'
    type: object
  workspacekinds.PodTemplateOptions:
    properties:
      imageConfig:
        $ref: '#/definitions/workspacekinds.ImageConfig'
      podConfig:
        $ref: '#/definitions/workspacekinds.PodConfig'
    type: object
  workspacekinds.PodVolumeMounts:
    properties:
      home:
        type: string
    type: object
  workspacekinds.RedirectMessage:
    properties:
      level:
        $ref: '#/definitions/workspacekinds.RedirectMessageLevel'
      text:
        type: string
    type: object
  workspacekinds.RedirectMessageLevel:
    enum:
    - Info
    - Warning
    - Danger
    type: string
    x-enum-varnames:
    - RedirectMessageLevelInfo
    - RedirectMessageLevelWarning
    - RedirectMessageLevelDanger
  workspacekinds.WorkspaceKind:
    properties:
      deprecated:
        type: boolean
      deprecationMessage:
        type: string
      description:
        type: string
      displayName:
        type: string
      hidden:
        type: boolean
      icon:
        $ref: '#/definitions/workspacekinds.ImageRef'
      logo:
        $ref: '#/definitions/workspacekinds.ImageRef'
      name:
        type: string
      podTemplate:
        $ref: '#/definitions/workspacekinds.PodTemplate'
    type: object
  workspaces.Activity:
    properties:
      lastActivity:
        description: Unix Epoch time
        type: integer
      lastProbe:
        $ref: '#/definitions/workspaces.LastProbeInfo'
      lastUpdate:
        description: Unix Epoch time
        type: integer
    type: object
  workspaces.HttpService:
    properties:
      displayName:
        type: string
      httpPath:
        type: string
    type: object
  workspaces.ImageConfig:
    properties:
      current:
        $ref: '#/definitions/workspaces.OptionInfo'
      desired:
        $ref: '#/definitions/workspaces.OptionInfo'
      redirectChain:
        items:
          $ref: '#/definitions/workspaces.RedirectStep'
        type: array
    type: object
  workspaces.ImageRef:
    properties:
      url:
        type: string
    type: object
  workspaces.LastProbeInfo:
    properties:
      endTimeMs:
        description: Unix Epoch time in milliseconds
        type: integer
      message:
        type: string
      result:
        $ref: '#/definitions/workspaces.ProbeResult'
      startTimeMs:
        description: Unix Epoch time in milliseconds
        type: integer
    type: object
  workspaces.OptionInfo:
    properties:
      description:
        type: string
      displayName:
        type: string
      id:
        type: string
      labels:
        items:
          $ref: '#/definitions/workspaces.OptionLabel'
        type: array
    type: object
  workspaces.OptionLabel:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  workspaces.PodConfig:
    properties:
      current:
        $ref: '#/definitions/workspaces.OptionInfo'
      desired:
        $ref: '#/definitions/workspaces.OptionInfo'
      redirectChain:
        items:
          $ref: '#/definitions/workspaces.RedirectStep'
        type: array
    type: object
  workspaces.PodMetadata:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
    type: object
  workspaces.PodMetadataMutate:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      labels:
        additionalProperties:
          type: string
        type: object
    type: object
  workspaces.PodTemplate:
    properties:
      options:
        $ref: '#/definitions/workspaces.PodTemplateOptions'
      podMetadata:
        $ref: '#/definitions/workspaces.PodMetadata'
      volumes:
        $ref: '#/definitions/workspaces.PodVolumes'
    type: object
  workspaces.PodTemplateMutate:
    properties:
      options:
        $ref: '#/definitions/workspaces.PodTemplateOptionsMutate'
      podMetadata:
        $ref: '#/definitions/workspaces.PodMetadataMutate'
      volumes:
        $ref: '#/definitions/workspaces.PodVolumesMutate'
    type: object
  workspaces.PodTemplateOptions:
    properties:
      imageConfig:
        $ref: '#/definitions/workspaces.ImageConfig'
      podConfig:
        $ref: '#/definitions/workspaces.PodConfig'
    type: object
  workspaces.PodTemplateOptionsMutate:
    properties:
      imageConfig:
        type: string
      podConfig:
        type: string
    type: object
  workspaces.PodVolumeInfo:
    properties:
      mountPath:
        type: string
      pvcName:
        type: string
      readOnly:
        type: boolean
    type: object
  workspaces.PodVolumeMount:
    properties:
      mountPath:
        type: string
      pvcName:
        type: string
      readOnly:
        type: boolean
    type: object
  workspaces.PodVolumes:
    properties:
      data:
        items:
          $ref: '#/definitions/workspaces.PodVolumeInfo'
        type: array
      home:
        $ref: '#/definitions/workspaces.PodVolumeInfo'
    type: object
  workspaces.PodVolumesMutate:
    properties:
      data:
        items:
          $ref: '#/definitions/workspaces.PodVolumeMount'
        type: array
      home:
        type: string
    type: object
  workspaces.ProbeResult:
    enum:
    - Success
    - Failure
    - Timeout
    type: string
    x-enum-varnames:
    - ProbeResultSuccess
    - ProbeResultFailure
    - ProbeResultTimeout
  workspaces.RedirectMessage:
    properties:
      level:
        $ref: '#/definitions/workspaces.RedirectMessageLevel'
      text:
        type: string
    type: object
  workspaces.RedirectMessageLevel:
    enum:
    - Info
    - Warning
    - Danger
    type: string
    x-enum-varnames:
    - RedirectMessageLevelInfo
    - RedirectMessageLevelWarning
    - RedirectMessageLevelDanger
  workspaces.RedirectStep:
    properties:
      message:
        $ref: '#/definitions/workspaces.RedirectMessage'
      sourceId:
        type: string
      targetId:
        type: string
    type: object
  workspaces.Service:
    properties:
      httpService:
        $ref: '#/definitions/workspaces.HttpService'
    type: object
  workspaces.Workspace:
    properties:
      activity:
        $ref: '#/definitions/workspaces.Activity'
      deferUpdates:
        type: boolean
      name:
        type: string
      namespace:
        type: string
      paused:
        type: boolean
      pausedTime:
        type: integer
      pendingRestart:
        type: boolean
      podTemplate:
        $ref: '#/definitions/workspaces.PodTemplate'
      services:
        items:
          $ref: '#/definitions/workspaces.Service'
        type: array
      state:
        $ref: '#/definitions/workspaces.WorkspaceState'
      stateMessage:
        type: string
      workspaceKind:
        $ref: '#/definitions/workspaces.WorkspaceKindInfo'
    type: object
  workspaces.WorkspaceCreate:
    properties:
      deferUpdates:
        type: boolean
      kind:
        type: string
      name:
        type: string
      paused:
        type: boolean
      podTemplate:
        $ref: '#/definitions/workspaces.PodTemplateMutate'
    type: object
  workspaces.WorkspaceKindInfo:
    properties:
      icon:
        $ref: '#/definitions/workspaces.ImageRef'
      logo:
        $ref: '#/definitions/workspaces.ImageRef'
      missing:
        type: boolean
      name:
        type: string
    type: object
  workspaces.WorkspaceState:
    enum:
    - Running
    - Terminating
    - Paused
    - Pending
    - Error
    - Unknown
    type: string
    x-enum-varnames:
    - WorkspaceStateRunning
    - WorkspaceStateTerminating
    - WorkspaceStatePaused
    - WorkspaceStatePending
    - WorkspaceStateError
    - WorkspaceStateUnknown
host: localhost:4000
info:
  contact: {}
  description: |-
    This API provides endpoints to manage notebooks in a Kubernetes cluster.
    For more information, visit https://www.kubeflow.org/docs/components/notebooks/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Kubeflow Notebooks API
  version: 1.0.0
paths:
  /healthcheck:
    get:
      description: Provides a healthcheck response indicating the status of key services.
      produces:
      - application/json
      responses:
        "200":
          description: Successful healthcheck response
          schema:
            $ref: '#/definitions/health_check.HealthCheck'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      summary: Returns the health status of the application
      tags:
      - healthcheck
  /namespaces:
    get:
      description: Provides a list of all namespaces that the user has access to
      produces:
      - application/json
      responses:
        "200":
          description: Successful namespaces response
          schema:
            $ref: '#/definitions/api.NamespaceListEnvelope'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      summary: Returns a list of all namespaces
      tags:
      - namespaces
  /workspacekinds:
    get:
      consumes:
      - application/json
      description: Returns a list of all available workspace kinds. Workspace kinds
        define the different types of workspaces that can be created in the system.
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation. Returns a list of all available workspace
            kinds.
          schema:
            $ref: '#/definitions/api.WorkspaceKindListEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to list workspace
            kinds.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: List workspace kinds
      tags:
      - workspacekinds
  /workspacekinds/{name}:
    get:
      consumes:
      - application/json
      description: Returns details of a specific workspace kind identified by its
        name. Workspace kinds define the available types of workspaces that can be
        created.
      parameters:
      - description: Name of the workspace kind
        example: jupyterlab
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation. Returns the requested workspace kind
            details.
          schema:
            $ref: '#/definitions/api.WorkspaceKindEnvelope'
        "400":
          description: Bad Request. Invalid workspace kind name format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to access the workspace
            kind.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "404":
          description: Not Found. Workspace kind does not exist.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Get workspace kind
      tags:
      - workspacekinds
  /workspaces:
    get:
      consumes:
      - application/json
      description: |-
        Returns a list of workspaces. The endpoint supports two modes:
        1. List all workspaces across all namespaces (when no namespace is provided)
        2. List workspaces in a specific namespace (when namespace is provided)
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation. Returns a list of workspaces.
          schema:
            $ref: '#/definitions/api.WorkspaceListEnvelope'
        "400":
          description: Bad Request. Invalid namespace format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to list workspaces.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: List workspaces
      tags:
      - workspaces
  /workspaces/{namespace}:
    get:
      consumes:
      - application/json
      description: |-
        Returns a list of workspaces. The endpoint supports two modes:
        1. List all workspaces across all namespaces (when no namespace is provided)
        2. List workspaces in a specific namespace (when namespace is provided)
      parameters:
      - description: Namespace to filter workspaces. If not provided, returns all
          workspaces across all namespaces.
        example: kubeflow-user-example-com
        in: path
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation. Returns a list of workspaces.
          schema:
            $ref: '#/definitions/api.WorkspaceListEnvelope'
        "400":
          description: Bad Request. Invalid namespace format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to list workspaces.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: List workspaces
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: Creates a new workspace in the specified namespace.
      parameters:
      - description: Namespace for the workspace
        example: kubeflow-user-example-com
        in: path
        name: namespace
        required: true
        type: string
      - description: Workspace creation configuration
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.WorkspaceCreateEnvelope'
      produces:
      - application/json
      responses:
        "201":
          description: Workspace created successfully
          schema:
            $ref: '#/definitions/api.WorkspaceEnvelope'
        "400":
          description: Bad Request. Invalid request body or namespace format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to create workspace.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "409":
          description: Conflict. Workspace with the same name already exists.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Create workspace
      tags:
      - workspaces
  /workspaces/{namespace}/{workspace_name}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific workspace identified by namespace and workspace
        name.
      parameters:
      - description: Namespace of the workspace
        example: kubeflow-user-example-com
        in: path
        name: namespace
        required: true
        type: string
      - description: Name of the workspace
        example: my-workspace
        in: path
        name: workspace_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Workspace deleted successfully
        "400":
          description: Bad Request. Invalid namespace or workspace name format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to delete the workspace.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "404":
          description: Not Found. Workspace does not exist.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Delete workspace
      tags:
      - workspaces
    get:
      consumes:
      - application/json
      description: Returns details of a specific workspace identified by namespace
        and workspace name.
      parameters:
      - description: Namespace of the workspace
        example: kubeflow-user-example-com
        in: path
        name: namespace
        required: true
        type: string
      - description: Name of the workspace
        example: my-workspace
        in: path
        name: workspace_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation. Returns the requested workspace details.
          schema:
            $ref: '#/definitions/api.WorkspaceEnvelope'
        "400":
          description: Bad Request. Invalid namespace or workspace name format.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "401":
          description: Unauthorized. Authentication is required.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "403":
          description: Forbidden. User does not have permission to access the workspace.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "404":
          description: Not Found. Workspace does not exist.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
        "500":
          description: Internal server error. An unexpected error occurred on the
            server.
          schema:
            $ref: '#/definitions/api.ErrorEnvelope'
      security:
      - ApiKeyAuth: []
      summary: Get workspace
      tags:
      - workspaces
schemes:
- http
- https
swagger: "2.0"
